@page
@model Pharmacy.Areas.Admin.Pages.Customers.FavouriteModel
@{
}

<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Favourites"]
                            <a asp-page="Index" class="btn btn-primary invers"> @sharedResource["Back"]</a>
                        </h2>
                        
                    </div>
                  
                    <div class="card-body">
                        <h3>@Model.customerName</h3>

                        @(Html.DevExtreme().DataGrid<Pharmacy.Models.Item>()
                        .ID("gridContainer")

                        .DataSource(ds => ds.Mvc()
                        .Controller("Items")
                        .LoadAction("GetFavByCustomerId")
                        .LoadParams(new { customerId = Model.customerId })
                        .Key("ItemId")
                        )
                        .Columns(columns => {
                                              columns.AddFor(m => m.ItemPic)
            .Width(100)
            .AllowFiltering(false)
            .AllowSorting(false)
            .CellTemplate(@<text>
                <div>
                    <img width="50" height="50" src="/Images/Item/<%- value %>" alt="image"/>
                </div>
            </text>).Caption(sharedResource["Picture"]);

                        columns.AddFor(m => m.ItemTlAr).Caption(sharedResource["TlAr"]);
                        columns.AddFor(m => m.ItemTlEn).Caption(sharedResource["TlEn"]);


                        columns.AddFor(m => m.Price).Caption(sharedResource["Price"]);
                        columns.AddFor(m => m.IsActive).Caption(sharedResource["IsActive"]);

                        columns.AddFor(m => m.CategoryId).Lookup(lookup => lookup
.DataSource(ds => ds.WebApi().Controller("Items").LoadAction("CategoriesLookup").Key("Value"))
.ValueExpr("Value")
.DisplayExpr("Text")
).Caption(sharedResource["Category"]);
                        columns.AddFor(m => m.BrandId).Lookup(lookup => lookup
.DataSource(ds => ds.WebApi().Controller("Items").LoadAction("BrandsLookup").Key("Value"))
.ValueExpr("Value")
.DisplayExpr("Text")
).Caption(sharedResource["Brand"]);


                        })
                          .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.Visible(true);
                            pager.DisplayMode(GridPagerDisplayMode.Full);
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                            pager.ShowInfo(true);
                            pager.ShowNavigationButtons(true);

                        })
                        .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(true)
                        .ShowRowLines(true)
                        .RowAlternationEnabled(true)
                        .AllowColumnReordering(true)
                        .ShowRowLines(true)
                        .ShowBorders(true)
                        .SearchPanel(searchPanel => searchPanel
                        .Visible(true)
                        .Width(240)
                        .Placeholder(sharedResource["SearchTxt"]))
                        .RemoteOperations(true)
                        .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
                                        )
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
