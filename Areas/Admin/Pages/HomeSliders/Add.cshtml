@page
@model Pharmacy.Areas.Admin.Pages.HomeSliders.AddModel
@{
}


<div class="page-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Add"]  @sharedResource["HomeSlider"]
                            <a asp-page="Index" class="btn btn-primary"> @sharedResource["Back"]</a>
                        </h2>
                    </div>
                    <div class="card-body">
                        <div class="text-danger DeleteValidation ">@Html.ValidationMessage("Validation") </div>

                        <br />
                        <form id="form" method="post" enctype="multipart/form-data">





                            @Html.Hidden("ItemId", "")
                            @Html.Hidden("CategoryId", "")
                            @(Html.DevExtreme().Form<Pharmacy.Models.HomeSlider>()

    .ID("HomeSliderForm")
     .OnInitialized("onFormInitialized")

.Items(items => {


    items.AddSimpleFor(m => m.HomeSliderTypeId).IsRequired(true).Label(k => k.Text(sharedResource["SelectSliderType"]))
            .Editor(e => e
                .Lookup()
                .DataSource(ds => ds.WebApi().Controller("HomeSliders").LoadAction("HomeSliderTypesLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
                .Placeholder(sharedResource["Select"])
                 .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
                 .OnValueChanged("onValueChanged")
                 );

    items.AddSimple()
            .Editor(e => e
                .Lookup()
                 .DataSource(ds => ds.WebApi().Controller("ItemImages").LoadAction("ItemsLookup").Key("Value"))
          .DisplayExpr("Text")
            .ValueExpr("Value")
            .Placeholder(sharedResource["Select"])
                 .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
      .OnSelectionChanged("ItemValueChanged")

                 ).Label(k => k.Text(sharedResource["Item"])).Name("item").Visible(false).IsRequired(true);


    items.AddSimple()
    .Editor(e => e
    .Lookup()
    .DataSource(ds => ds.WebApi().Controller("Items").LoadAction("CategoriesLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    .Placeholder(sharedResource["Select"])
                 .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
             .OnSelectionChanged("CategoryValueChanged")


    ).Label(k => k.Text(sharedResource["Category"])).Visible(false).Name("Category").IsRequired(true);

    items.AddSimpleFor(m => m.HomeSliderEntityId).Visible(false).Name("URL").Label(k => k.Text(sharedResource["ExternalURL"])).IsRequired(true);

    items.AddSimpleFor(m => m.HomeSliderPic).IsRequired(true).Label(k => k.Text(sharedResource["Picture"])).Template(@<text>
                            @(Html.DevExtreme().FileUploader()
                                        .Name("Photo")
                                        .SelectButtonText(sharedResource["Select_photo"])
                                        .LabelText("")
                                        .Accept("image/*")
                                        .UploadMode(FileUploadMode.UseForm)
                                        .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
                                        .Height(70)
                               )

                            </text> ).IsRequired(true);
    items.AddButton()
  .ColSpan(3)
  .HorizontalAlignment(HorizontalAlignment.Right)
  .ButtonOptions(b => b.Text(sharedResource["Save"])
  .Type(ButtonType.Success)
  .UseSubmitBehavior(true)).CssClass("invers");



})
                            )

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var form
    function onFormInitialized(e) {
        form = e.component;
    }





    function CategoryValueChanged(data) {
        if (data.selectedItem != null) {
            $("#CategoryId").val(data.selectedItem.Value);
        }
    }

    function ItemValueChanged(data) {
        if (data.selectedItem != null) {
            $("#ItemId").val(data.selectedItem.Value);
        }
       
    }

    function onValueChanged(e) {

        if (e.value === 1) {
            form.itemOption("Category", "visible", true);
            form.itemOption("item", "visible", false);
            form.itemOption("URL", "visible", false);
        }
        if (e.value === 2) {
            form.itemOption("item", "visible", true)
            form.itemOption("URL", "visible", false);
            form.itemOption("Category", "visible", false);
        }





        if (e.value === 3) {
            form.itemOption("URL", "visible", true);
            form.itemOption("item", "visible", false)
            form.itemOption("Category", "visible", false);
        }

    }


</script>